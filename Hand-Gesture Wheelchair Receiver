#include <nRF24L01.h>
#include <printf.h>
#include <RF24.h>
#include <RF24_config.h>
#include <SPI.h>      
#include "RF24.h"  


const int enbA = 3;
const int enbB = 5;

const int IN1 = 2;   
const int IN2 = 4;    
const int IN3 = 7;    
const int IN4 = 6;   

int RightSpd = 255;
int LeftSpd = 255;

float data[2];


RF24 radio(9, 8);

const uint64_t pipe = 0xE8E8F0F0E1LL;


const int trigPin = A0;
const int echoPin = A1;
long duration;
int distance;
int distanceCm;
int distanceInch;

void setup(){
  //Define the motor pins as OUTPUT
  pinMode(enbA, OUTPUT);
  pinMode(enbB, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  
  Serial.begin(9600);
  radio.begin();                               
  radio.openReadingPipe(1, pipe);
  radio.startListening();  

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);      
}

void loop(){

  if (radio.available()){
    radio.read(data, sizeof(data));

    Serial.print("Received: X=");
    Serial.print(data[0]);
    Serial.print(" Y=");
    Serial.print(data[1]);


   
    digitalWrite(trigPin, LOW);
    digitalWrite(trigPin, HIGH);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    distanceCm = duration * 0.034 / 2;
    Serial.print(" Distance: "); 
    Serial.print(distanceCm); 
    Serial.println(" cm");

    
    if(distanceCm < 30){
      analogWrite(enbA, 0);
      analogWrite(enbB, 0);
      digitalWrite(IN1, LOW);
      digitalWrite(IN2, LOW);
      digitalWrite(IN3, LOW);
      digitalWrite(IN4, LOW);
      
      if(data[0] < -0.50 ){
      //backward              
      analogWrite(enbA, RightSpd);
      analogWrite(enbB, LeftSpd);
      digitalWrite(IN1, LOW);
      digitalWrite(IN2, HIGH);
      digitalWrite(IN3, LOW);
      digitalWrite(IN4, HIGH);
    }
     }
    else {

    if(data[0] > 0.50){
      //forward            
      analogWrite(enbA, RightSpd);
      analogWrite(enbB, LeftSpd);
      digitalWrite(IN1, HIGH);
      digitalWrite(IN2, LOW);
      digitalWrite(IN3, HIGH);
      digitalWrite(IN4, LOW);
    }
    
    if(data[0] < -0.50 ){
      //backward              
      analogWrite(enbA, RightSpd);
      analogWrite(enbB, LeftSpd);
      digitalWrite(IN1, LOW);
      digitalWrite(IN2, HIGH);
      digitalWrite(IN3, LOW);
      digitalWrite(IN4, HIGH);
    }
     
    if(data[1] > 0.50){
      //left
      analogWrite(enbA, RightSpd);
      analogWrite(enbB, LeftSpd);
      digitalWrite(IN1, HIGH);
      digitalWrite(IN2, LOW);
      digitalWrite(IN3, LOW);
      digitalWrite(IN4, HIGH);
    }

    if(data[1] < -0.50){
      //right
      analogWrite(enbA, RightSpd);
      analogWrite(enbB, LeftSpd);
      digitalWrite(IN1, LOW);
      digitalWrite(IN2, HIGH);
      digitalWrite(IN3, HIGH);
      digitalWrite(IN4, LOW);
    }

    if(data[0] < 0.50 && data[0] > -0.50 && data[1] < 0.50 && data[1] > -0.50) {
      //stop car
      analogWrite(enbA, 0);
      analogWrite(enbB, 0);
    }
  }
  }
}
